[ 문제 ]
'''
정수 배열 arr와 2개의 구간이 담긴 배열 intervals가 주어집니다.
intervals는 항상 [[a1, b1], [a2, b2]]의 꼴로 주어지며 각 구간은 닫힌 구간입니다. 
닫힌 구간은 양 끝값과 그 사이의 값을 모두 포함하는 구간을 의미합니다.
이때 배열 arr의 첫 번째 구간에 해당하는 배열과 두 번째 구간에 해당하는 배열을 앞뒤로 붙여 
새로운 배열을 만들어 return 하는 solution 함수를 완성해 주세요.
'''
//=====================================================================

[ 내 풀이 ]
import java.util.*;
class Solution {
    public int[] solution(int[] arr, int[][] intervals) {
        List<Integer> list = new ArrayList<>(); 
        
        for(int[] interval : intervals) {
            int a = interval[0];
            int b = interval[1];
            for(int i=a; i<=b; i++) {
                list.add(arr[i]);
            }
        }
        return list.stream().mapToInt(Integer::intValue).toArray();
    }
}
//=====================================================================

[ 메모 ]
1. 타 풀이 보던 중 for loop과 stream 중 어떤 게 낫냐는 댓글 있었는데 몇 십만 개 넘어가지 않는 이상 for loop이 빠르다고 함. for loop이 오래 전 추가돼서 최적화가 잘 되어있다고.
