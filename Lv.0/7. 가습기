[ 문제 ]
'''
Q. 현재 가습기가 몇 단계로 작동 중인지를 return하도록 빈칸을 채워라.

"auto" 모드
습도가 0 이상 10 미만인 경우 : 5단계
습도가 10 이상 20 미만인 경우 : 4단계
습도가 20 이상 30 미만인 경우 : 3단계
습도가 30 이상 40 미만인 경우 : 2단계
습도가 40 이상 50 미만인 경우 : 1단계
습도가 50 이상인 경우 : 0단계

"target" 모드
습도가 설정값 미만일 경우 : 3단계
습도가 설정값 이상일 경우 : 1단계

"minimum"모드
습도가 설정값 미만일 경우 : 1단계
습도가 설정값 이상일 경우 : 0단계

가습기 모드 = mode_type
습도 (정수) = humidity
설정값 (정수) = val_set
'''
//================================================================

[ 풀이 ]
'''
위에서 정의해 놓은 함수를 보고 하단 solution함수에서 골라 작성하는 형태였음.

1. func1
  : 습도가 설정값보다 더 크면 1을 반환하는 걸 보니 target모드임.
  -> 따라서 빈칸 return 3;

2. func2
  : auto모드 함수인데 이미 거의 쓰여있어서 설명 생략.

3. func3
  : 여긴 func1과 반대로 습도가 설정값보다 작아야 1을 반환하고 있음.
  -> 따라서 빈칸 return 1;

4. 위 함수들을 호출하고 있는 solution() 함수를 채우자.
  : 함수를 가져다 쓸 때 해당 함수의 파라미터가 몇 개인지 확인하기.
'''
//================================================================

[ 답안 ]
class Solution {
    public int func1(int humidity, int val_set){
        if(humidity < val_set)
            return 3; // 빈칸 답안
        return 1;
    }

    public int func2(int humidity){
        if(humidity >= 50)
            return 0;
        else if (humidity >= 40)
            return 1;
        else if (humidity >= 30)
            return 2;
        else if (humidity >= 20)
            return 3;
        else if (humidity >= 10)
            return 4;
        
        else         
            return 5; // 빈칸 답안
    }

    public int func3(int humidity, int val_set){
        if(humidity < val_set)
            return 1;
        return 0; // 빈칸 답안
    }

    public int solution(String mode_type, int humidity, int val_set) {
        int answer = 0;

        if(mode_type.equals("auto")){
            answer = func2(humidity); // 빈칸 답안
        }
        else if(mode_type.equals("target")){
            answer = func1(humidity, val_set); // 빈칸 답안
        }
        else if(mode_type.equals("minimum")){
            answer = func3(humidity, val_set); // 빈칸 답안
        }

        return answer;
    }
}
//================================================================

[ Memo ]
// func1, func3 보면서 잠깐 착각했던 게 if문 성립되면 정수 return과 동시에 함수 종료되는 건데, return 2개 다 실행된다고 생각해버림ㅎ;
