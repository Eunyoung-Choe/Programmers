[ 문제 ]
'''
정수 n과 정수 3개가 담긴 리스트 slicer 그리고 정수 여러 개가 담긴 리스트 num_list가 주어집니다. 
slicer에 담긴 정수를 차례대로 a, b, c라고 할 때, n에 따라 다음과 같이 num_list를 슬라이싱 하려고 합니다.
n = 1 : num_list의 0번 인덱스부터 b번 인덱스까지
n = 2 : num_list의 a번 인덱스부터 마지막 인덱스까지
n = 3 : num_list의 a번 인덱스부터 b번 인덱스까지
n = 4 : num_list의 a번 인덱스부터 b번 인덱스까지 c 간격으로
올바르게 슬라이싱한 리스트를 return하도록 solution 함수를 완성해주세요.
'''
//=====================================================================

[ 내 풀이 ]
// 배열/리스트 문제 어렵다......
import java.util.*;
class Solution {
    public int[] solution(int n, int[] slicer, int[] num_list) {
        int a = slicer[0];
        int b = slicer[1];
        int c = slicer[2];
        List<Integer> list = new ArrayList<>();
        
        switch(n) {
            case 1 : 
                return Arrays.copyOfRange(num_list, 0, b+1);
                // break 필요없음. 오히려 도달 못하는 코드로 오류가 날 수도.
            case 2 :
                // 배열에는 .size() 메서드 없음.
                return Arrays.copyOfRange(num_list, a, num_list.length);
            case 3 :
                return Arrays.copyOfRange(num_list, a, b+1);
            case 4 :
                // 배열에는 .get() 메서드 없음.
                for(int i=a; i<b+1; i+=c) {
                    list.add(num_list[i]);
                }
                return list.stream().mapToInt(Integer::intValue).toArray();
            default :
                return new int[0];
        }
        // default를 안 쓰면 switch문 밖에서도 return이 반드시 있어야 함.
    }
}
//=====================================================================

[ 타 풀이 ]
// 공통된 사항끼리 잘 묶었다...
int start = n == 1 ? 0 : slicer[0];
int end = n == 2 ? num_list.length - 1 : slicer[1];
int step = n == 4 ? slicer[2] : 1; // 연속된 구간이니까 n==4 아니면 그냥 1로 처리

int[] answer = new int[(end - start + step) / step]; // 나누어 떨어지지 않아도 마지막 요소를 포함할 수 있도록 step을 더함.

for (int i = start, j = 0; i <= end; i += step) { // 변수를 2개 넣을 수 있네??
    answer[j++] = num_list[i];
}
return answer;
//=====================================================================

[ 메모 ]
1. 이전에 풀었던 문제들 중 Arrays.copyOf()라는 원본 배열 복사하는 메서드가 있었음.
  이번 Arrays.copyOfRange()는 범위를 지정해 가져오는 메서드인 것.

2. 배열과 리스트 메서드가 헷갈림...
  배열: length           / 리스트: size()
  배열: 인덱스로 값 추가  / 리스트: get()

3. for문에 두 개 이상의 변수를 동시에 선언 및 업데이트 할 수 있음!
  for (int i = 0, j = 0; i <= 10; i++, j += 2) {
      System.out.println("i = " + i + ", j = " + j);
  }
