[ 문제 ]
'''
1부터 6까지 숫자가 적힌 주사위가 세 개 있습니다. 
세 주사위를 굴렸을 때 나온 숫자를 각각 a, b, c라고 했을 때 얻는 점수는 다음과 같습니다.

세 숫자가 모두 다르다면 a + b + c 점을 얻습니다.
세 숫자 중 어느 두 숫자는 같고 나머지 다른 숫자는 다르다면 (a + b + c) × (a2 + b2 + c2 )점을 얻습니다.
세 숫자가 모두 같다면 (a + b + c) × (a2 + b2 + c2 ) × (a3 + b3 + c3 )점을 얻습니다.
세 정수 a, b, c가 매개변수로 주어질 때, 얻는 점수를 return 하는 solution 함수를 작성해 주세요.
'''
//=====================================================================

[ 내 풀이 ]
class Solution {
    public int solution(int a, int b, int c) {
        int answer = 0;  // answer 자체에 a+b+c를 넣은 사람도 있었음.
        answer += (a!=b)&&(a!=c)&&(b!=c) ? (a+b+c) : 0; // 전부 비동일 
        answer += (a==b)&&(b==c) ? (a+b+c)*(a*a+b*b+c*c)*(a*a*a+b*b*b+c*c*c) : 0; // 전부 동일
        answer += (a==b||a==c||b==c) && !(a==b&&b==c) ? (a+b+c)*(a*a+b*b+c*c) : 0; // 일부 동일 
            
        return answer;
    }
} // 내가 썼지만 정말 못생겼다고 생각함...^^ㅠ 
//=====================================================================

[ 타 풀이 ]
class Solution {
    public int solution(int a, int b, int c) {
        int answer = 1;

        int count = 1;
        if(a == b || a == c || b == c) {
            count++;
        }

        if(a == b && b == c) {
            count++;
        }

        for(int i = 1; i <= count; i++) {
            answer *= (pow(a,i)+pow(b,i)+pow(c,i)); // 왜 굳이 조건별 계산을 저렇게 정했을까 싶었는데 재귀를 원한 듯
        }

        return answer;
    }

    private int pow(int a, int b) { // 재귀함수
        if(b == 0) return 1; // b=0이 되면 마지막엔 1을 곱하면서 곱셈 종료.
        return a * pow(a, b-1); // 스스로를 계속 불러서 pow(2, 3) = 2 * (2 * (2 * 1)) = 8와 같이 계산을 진행함.
    }
}
//=====================================================================

[ 메모 ]
1. 재귀 함수에는 줄어드는(커지는) 요소가 꼭 필요함. 무한히 반복되지 않도록.
  ※ 재귀 함수의 2가지 필수 요소 -> 종료 조건 & 문제 축소(매 호출마다 입력값이 종료 조건 쪽으로 이동)
  즉, a*pow(a,b)라고 쓰면 b가 그대로이니 무한 재귀가 되어버리면서 StackOverFlow 에러가 남.
