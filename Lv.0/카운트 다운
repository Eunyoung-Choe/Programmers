[ 문제 ]
'''
정수 start_num와 end_num가 주어질 때, start_num에서 end_num까지 1씩 감소하는 수들을 
차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.
start_num	  end_num	  result
10	        3	        [10, 9, 8, 7, 6, 5, 4, 3]
'''
//=====================================================================

[ 내 풀이 ]
class Solution {
    public int[] solution(int start_num, int end_num) {
        int[] answer = new int[start_num - end_num + 1];
        int idx = 0;
        
        for(int i=start_num; i>=end_num; i--)
            answer[idx++] = i;
        // add는 ArrayList 같은 '컬렉션'에서 사용 가능 
        
        return answer;
    }
}
//=====================================================================

[ 타 풀이 ]
IntStream.rangeClosed(-start, -end).map(i -> -i).toArray();
// -start부터 -end까지 연속된 정수 스트림 생성
// 음수로 뒤집어서 만든 이유는 rangeClosed()가 항상 '오름차순'으로 동작하기 때문.
// (-5, -1)이면 -5, -4, ..., -1
// map의 i를 -i로 바꿔서 스트림의 각 원소를 변환함!
//=====================================================================

[ 메모 ]
1. Stream과 for문 효율성 차이를 GPT에게 물어봄.
  데이터 양이 방대해지면 무조건 for문 성능이 좋다고 함. Stream의 추가 오버헤드가 누적.
  Stream이라는 게 내부적으로 for문을 감싸고 부가 기능(람다, 파이프라인)을 얹은 거라 데이터가 커지면 느려짐.
