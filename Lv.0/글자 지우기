[ 문제 ]
'''
문자열 my_string과 정수 배열 indices가 주어질 때, my_string에서 indices의 원소에 해당하는 인덱스의 글자를 지우고 
이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.
my_string	              indices	                      result
"apporoograpemmemprs"	  [1, 16, 6, 15, 0, 10, 11, 3]	"programmers"
'''
//=====================================================================

[ 내 풀이 ]
// 문제에서 주어진 걸 있는 그대로 보지 않고 변형할 생각도 하자!!
import java.util.*;
class Solution {
    public String solution(String my_string, int[] indices) {
        StringBuilder myString = new StringBuilder(my_string);
        
        // 핵심은 처음 원본 기준 인덱스 자리가 지워져야 함.
        // 갑자기 indices를 내림차순으로 고치면 되겠다는 생각이!!!
        Integer[] Indices = Arrays.stream(indices).boxed().toArray(Integer[]::new); // 이건 GPT 보고 씀
        Arrays.sort(Indices, Collections.reverseOrder());
        
        for(int num : Indices)
            myString.deleteCharAt(num);
        
        return myString.toString();
    }
}
//=====================================================================

[ 타 풀이 1 ]
// GPT 코드 리뷰
// 내가 쓴 코드에선 boxing이 들어가서 약간 오버헤드가 있어 아래와 같은 방법을 추천한다고 함.
Arrays.sort(indices);
for (int i = indices.length - 1; i >= 0; i--) {
    myString.deleteCharAt(indices[i]); // 내림차순 정렬
}

[ 타 풀이 2 ]
String answer = "";
String[] tmp = my_string.split(""); // 한 문자씩 쪼갬.

for (int i = 0; i < indices.length; i++) {
    tmp[indices[i]] = ""; // 삭제할 위치에 있는 문자를 ""로 바꾸는 것..!! 
}

for (String x : tmp) {
    answer += x; // 그리고 다시 이어 붙임.
}
return answer;
//=====================================================================

[ 메모 ]
1. 일반 배열 int[]는 Arrays.sort() 오름차순 정렬은 가능한데 내림차순 옵션을 사용할 수 없음.
  Collections.reverseOrder()를 쓰려면 내 풀이처럼 참조형 배열 Integer[]로 고쳐야 함.

2. boxing: 기본형을 wrapper class로 변환하는 과정, 즉 객체 형태로 감싸는 것.
  기본형은 int, double, char, booldean 등 '값 자체'를 저장함.
  래퍼 클래스는 Integer, Double, Character, Boolean 등 '객체 형태'로 값을 감쌈.
